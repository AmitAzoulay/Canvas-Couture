<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>tore Statistics & Contact us</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.8.1/font/bootstrap-icons.min.css"
        rel="stylesheet">
    <link rel="stylesheet" href="css/infoStyle.css">
    <link rel="stylesheet" href="css/mainStyle.css">
    <script src="https://d3js.org/d3.v7.min.js"></script>
</head>

<body>
    <%- include('./homeNavbar.ejs') %>
        <div class="container">
            <h1>Store Statistics & Contact us</h1>
            <div class="charts-container">
                <div class="chart-container">
                    <h2>Top 5 Expensive Orders</h2>
                    <div class="chart" id="top-orders-chart"></div>
                </div>
                <div class="chart-container">
                    <h2>Sales by Category (Pie Chart)</h2>
                    <div class="chart" id="sales-category-chart"></div>
                    <div class="sales-category-legend" id="sales-category-legend"></div>
                    <!-- Add the legend container -->
                </div>
            </div>
            <script>
                // Store topExpensiveOrders in a data attribute
                const topExpensiveOrders = JSON.parse('<%- JSON.stringify(statistics.topExpensiveOrders) %>');
                // Store salesByCategory in a data attribute
                const salesByCategory = JSON.parse('<%- JSON.stringify(statistics.salesByCategory) %>');

                // D3.js Visualization for Top 5 Expensive Orders
                const topOrdersSvg = d3.select("#top-orders-chart")
                    .append("svg")
                    .attr("width", 600)
                    .attr("height", 300);

                const topOrderBars = topOrdersSvg.selectAll(".bar")
                    .data(topExpensiveOrders)
                    .enter()
                    .append("rect")
                    .attr("class", "bar")
                    .attr("x", (d, i) => i * (600 / topExpensiveOrders.length))
                    .attr("y", d => 300 - (d.totalOrderCost / d3.max(topExpensiveOrders, order => order.totalOrderCost) * 300))
                    .attr("width", 600 / topExpensiveOrders.length)
                    .attr("height", d => (d.totalOrderCost / d3.max(topExpensiveOrders, order => order.totalOrderCost) * 300))
                    .style("fill", "blue"); // Change the color to blue

                // Add labels for Top 5 Expensive Orders below the bars
                topOrdersSvg.selectAll(".label")
                    .data(topExpensiveOrders)
                    .enter()
                    .append("text")
                    .attr("class", "label")
                    .attr("x", (d, i) => i * (600 / topExpensiveOrders.length) + (600 / topExpensiveOrders.length) / 2)
                    .attr("y", 290) // Positioning below the bars
                    .attr("text-anchor", "middle")
                    .text(d => `$${d.totalOrderCost}`); // Display the total cost below each bar

                // D3.js Visualization for Sales by Category (Pie Chart)
                const width = 600;
                const height = 300;
                const radius = Math.min(width, height) / 2;

                const color = d3.scaleOrdinal(d3.schemeCategory10);

                const pie = d3.pie()
                    .value(d => d.totalSales);

                const arc = d3.arc()
                    .innerRadius(0)
                    .outerRadius(radius);

                const salesSvg = d3.select("#sales-category-chart")
                    .append("svg")
                    .attr("width", width)
                    .attr("height", height)
                    .append("g")
                    .attr("transform", `translate(${width / 2}, ${height / 2})`);

                const pieData = pie(salesByCategory);

                const arcs = salesSvg.selectAll(".arc")
                    .data(pieData)
                    .enter()
                    .append("g")
                    .attr("class", "arc");

                arcs.append("path")
                    .attr("d", arc)
                    .attr("fill", (d, i) => color(i));

                // Create Legend for Sales by Category
                const salesLegend = d3.select("#sales-category-legend");
                arcs.each(function (d, i) {
                    const category = d.data._id;
                    const totalSales = d.data.totalSales;
                    const legendColor = color(i); // Get the color for the pie segment

                    salesLegend.append("div")
                        .attr("class", "legend-item")
                        .html(`<div class="legend-color" style="background-color: ${legendColor};"></div>${category}: ${totalSales}`);
                });

                // Note: Removed the pie chart labels to avoid duplicating category names on the chart.
            </script>


            <h2>Contact Us</h2>
            <form action="/contact/send" method="POST">
                <label for="message">Message:</label>
                <textarea id="message" name="message" required></textarea>
                <button type="submit">Send</button>
            </form>
        </div>

</body>

</html>