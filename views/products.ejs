<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Clothing Store</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.8.1/font/bootstrap-icons.min.css"
        rel="stylesheet">
    <link rel="stylesheet" href="/css/mainStyle.css">
    <link rel="stylesheet" href="/css/productsStyle.css">
    <link rel="stylesheet" href="/css/filterW.css">
    <script src="/js/cartFunctions.js"></script>
</head>

<body>
    <%- include('./navbar.ejs') %>

        <section class="background"></section>

        <section class="background"></section>


        <div class="product-container">
            <ul class="product-list" id="productList">
                <% products.forEach(product=> { %>
                    <li class="product-item">
                        <a href="/products/search/product/<%= product.product_id %>" class="product-link">
                            <p><img src="/img/<%= product.name %>.png" alt="<%= product.name %>"
                                    class="card-product-img" /></p>
                            <h3>
                                <%= product.name %>
                            </h3>
                        </a>
                        <p>Price: $<%= product.price %>
                        </p>
                        <p>Color: <%= product.color %>
                        </p>
                        <p>Size: <%= product.size %>
                        </p>
                        <p>Gender: <%= product.gender %>
                        </p>
                        <p>Category: <%= product.category %>
                        </p>

                        <% if (product.stock> 0) { %>
                            <button class="stock-btn" onclick="addToCart('<%=product._id %>')">
                                <i class="fa fa-plus">+</i>
                            </button>
                            <% } else { %>
                                <p class="out-of-stock">Out of stock</p>
                                <% } %>
                    </li>
                    <% }); %>
            </ul>
        </div>

        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>

        <!-- JavaScript to handle search -->
        <script>
            const searchInput = document.getElementById('searchInput');
            const productList = document.getElementById('productList');
            const noProductsMessage = document.createElement('div'); // Create a div for the message
            noProductsMessage.className = 'no-products-message'; // Add a class for styling
            noProductsMessage.style.display = 'none'; // Initially hidden
            noProductsMessage.textContent = 'Product not found'; // Message text
            productList.parentNode.insertBefore(noProductsMessage, productList); // Insert the message above the product list

            // Function to fetch all products
            function fetchAllProducts() {
                fetch('/products/search/all') // This should return the JSON data
                    .then(response => {
                        if (!response.ok) {
                            throw new Error(`Network response was not ok: ${response.statusText}`);
                        }
                        return response.json();
                    })
                    .then(data => {
                        productList.innerHTML = ''; // Clear the current product list
                        noProductsMessage.style.display = 'none'; // Hide the message

                        if (data.products.length === 0) {
                            noProductsMessage.style.display = 'block'; // Show message if no products found
                        } else {
                            data.products.forEach(product => {
                                const li = document.createElement('li');
                                li.className = 'product-item';
                                li.innerHTML = `
                                <a href="/products/search/product/${product.product_id}" class="product-link">
                                    <p><img src="/img/${product.name}.png" alt="${product.name}" class="card-product-img" /></p>
                                    <h3>${product.name}</h3>
                                </a>
                                <p>Price: $${product.price}</p>
                                <p>Color: ${product.color}</p>
                                <p>Size: ${product.size}</p>
                                <p>Gender: ${product.gender}</p>
                                <p>Category: ${product.category}</p>
                            `;
                                productList.appendChild(li);
                            });
                        }
                    })
                    .catch(error => console.error('Error fetching products:', error));
            }

            // Add event listener for input changes
            searchInput.addEventListener('input', function () {
                const searchTerm = searchInput.value.trim();
                if (searchTerm) {
                    fetch(`/products/search/live/${encodeURIComponent(searchTerm)}`)
                        .then(response => {
                            if (!response.ok) {
                                throw new Error(`Network response was not ok: ${response.statusText}`);
                            }
                            return response.json();
                        })
                        .then(data => {
                            productList.innerHTML = ''; // Clear the current product list
                            noProductsMessage.style.display = 'none'; // Hide the message

                            if (data.products.length === 0) {
                                noProductsMessage.style.display = 'block'; // Show message if no products found
                            } else {
                                data.products.forEach(product => {
                                    const li = document.createElement('li');
                                    li.className = 'product-item';
                                    li.innerHTML = `
                                    <a href="/products/search/product/${product.product_id}" class="product-link">
                                        <p><img src="/img/${product.name}.png" alt="${product.name}" class="card-product-img" /></p>
                                        <h3>${product.name}</h3>
                                    </a>
                                    <p>Price: $${product.price}</p>
                                    <p>Color: ${product.color}</p>
                                    <p>Size: ${product.size}</p>
                                    <p>Gender: ${product.gender}</p>
                                    <p>Category: ${product.category}</p>
                                `;
                                    productList.appendChild(li);
                                });
                            }
                        })
                        .catch(error => console.error('Error during live search:', error));
                } else {
                    // If the input is empty, fetch all products
                    fetchAllProducts(); // This will update the product list with all products
                }
            });

            // Fetch all products on initial load
            fetchAllProducts(); // Fetch all products on initial load
        </script>
        
        <script src="/js/filter.js"></script>
</body>

</html>